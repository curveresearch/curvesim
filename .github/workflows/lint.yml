name: Lint

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main and develop branches.
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  pylint_previous:
    name: Generate old pylint score
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}

    - name: Set up latest Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt

    - name: Pylint
      run: |
        make pylint | tail -3 | head -1 > pylint_score.txt
        SCORE=$(cat pylint_score.txt)
        echo "Score: ${SCORE}"

    - name: Save previous pylint score
      uses: actions/upload-artifact@v3
      with:
        name: pylint-score
        path: pylint_score.txt

  lint:
    name: Format and Lint
    needs: pylint_previous
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up latest Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install anybadge==1.14.0

      - name: Format
        run: |
          make format

      - name: flake8
        run: |
          make flake8

      - name: Get previous pylint score
        uses: actions/download-artifact@v3
        with:
          name: pylint-score
          path: ./pylint_score.txt

      - name: Check pylint score didn't decrease
        run: |
          OLD_SCORE=$(cat pylint_score.txt/pylint_score.txt)
          SCORE=$(make pylint | tail -3 | head -1)
          echo "Old score: ${OLD_SCORE}"
          echo "New score: ${SCORE}"
          python3 -c "import sys; sys.exit(1) if float(${OLD_SCORE}) > float(${SCORE}) else None"
          anybadge --value="${SCORE}" --file=pylint.svg pylint
